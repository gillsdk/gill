/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  type Address,
  type Codec,
  combineCodec,
  type Decoder,
  type Encoder,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';

import {
  type AuthorizationData,
  type AuthorizationDataArgs,
  type CollectionDetailsToggle,
  type CollectionDetailsToggleArgs,
  type CollectionToggle,
  type CollectionToggleArgs,
  type Data,
  type DataArgs,
  getAuthorizationDataDecoder,
  getAuthorizationDataEncoder,
  getCollectionDetailsToggleDecoder,
  getCollectionDetailsToggleEncoder,
  getCollectionToggleDecoder,
  getCollectionToggleEncoder,
  getDataDecoder,
  getDataEncoder,
  getRuleSetToggleDecoder,
  getRuleSetToggleEncoder,
  getTokenStandardDecoder,
  getTokenStandardEncoder,
  getUsesToggleDecoder,
  getUsesToggleEncoder,
  type RuleSetToggle,
  type RuleSetToggleArgs,
  type TokenStandard,
  type TokenStandardArgs,
  type UsesToggle,
  type UsesToggleArgs,
} from '.';

export type UpdateArgs =
  {
      __kind: 'AsAuthorityItemDelegateV2';
      authorizationData: Option<AuthorizationData>;
      isMutable: Option<boolean>;
      newUpdateAuthority: Option<Address>;
      primarySaleHappened: Option<boolean>;
      tokenStandard: Option<TokenStandard>;
    } | {
      __kind: 'AsCollectionDelegateV2';
      authorizationData: Option<AuthorizationData>;
      collection: CollectionToggle;
    } | {
      __kind: 'AsCollectionItemDelegateV2';
      authorizationData: Option<AuthorizationData>;
      collection: CollectionToggle;
    } | {
      __kind: 'AsDataDelegateV2';
      authorizationData: Option<AuthorizationData>;
      data: Option<Data>;
    } | {
      __kind: 'AsDataItemDelegateV2';
      authorizationData: Option<AuthorizationData>;
      data: Option<Data>;
    } | {
      __kind: 'AsProgrammableConfigDelegateV2';
      authorizationData: Option<AuthorizationData>;
      ruleSet: RuleSetToggle;
    } | {
      __kind: 'AsProgrammableConfigItemDelegateV2';
      authorizationData: Option<AuthorizationData>;
      ruleSet: RuleSetToggle;
    } | {
      __kind: 'AsUpdateAuthorityV2';
      authorizationData: Option<AuthorizationData>;
      collection: CollectionToggle;
      collectionDetails: CollectionDetailsToggle;
      data: Option<Data>;
      isMutable: Option<boolean>;
      newUpdateAuthority: Option<Address>;
      primarySaleHappened: Option<boolean>;
      ruleSet: RuleSetToggle;
      tokenStandard: Option<TokenStandard>;
      uses: UsesToggle;
    } | {
      __kind: 'V1';
      authorizationData: Option<AuthorizationData>;
      collection: CollectionToggle;
      collectionDetails: CollectionDetailsToggle;
      data: Option<Data>;
      isMutable: Option<boolean>;
      newUpdateAuthority: Option<Address>;
      primarySaleHappened: Option<boolean>;
      ruleSet: RuleSetToggle;
      uses: UsesToggle;
    };

export type UpdateArgsArgs =
  {
      __kind: 'AsAuthorityItemDelegateV2';
      authorizationData: OptionOrNullable<AuthorizationDataArgs>;
      isMutable: OptionOrNullable<boolean>;
      newUpdateAuthority: OptionOrNullable<Address>;
      primarySaleHappened: OptionOrNullable<boolean>;
      tokenStandard: OptionOrNullable<TokenStandardArgs>;
    } | {
      __kind: 'AsCollectionDelegateV2';
      authorizationData: OptionOrNullable<AuthorizationDataArgs>;
      collection: CollectionToggleArgs;
    } | {
      __kind: 'AsCollectionItemDelegateV2';
      authorizationData: OptionOrNullable<AuthorizationDataArgs>;
      collection: CollectionToggleArgs;
    } | {
      __kind: 'AsDataDelegateV2';
      authorizationData: OptionOrNullable<AuthorizationDataArgs>;
      data: OptionOrNullable<DataArgs>;
    } | {
      __kind: 'AsDataItemDelegateV2';
      authorizationData: OptionOrNullable<AuthorizationDataArgs>;
      data: OptionOrNullable<DataArgs>;
    } | {
      __kind: 'AsProgrammableConfigDelegateV2';
      authorizationData: OptionOrNullable<AuthorizationDataArgs>;
      ruleSet: RuleSetToggleArgs;
    } | {
      __kind: 'AsProgrammableConfigItemDelegateV2';
      authorizationData: OptionOrNullable<AuthorizationDataArgs>;
      ruleSet: RuleSetToggleArgs;
    } | {
      __kind: 'AsUpdateAuthorityV2';
      authorizationData: OptionOrNullable<AuthorizationDataArgs>;
      collection: CollectionToggleArgs;
      collectionDetails: CollectionDetailsToggleArgs;
      data: OptionOrNullable<DataArgs>;
      isMutable: OptionOrNullable<boolean>;
      newUpdateAuthority: OptionOrNullable<Address>;
      primarySaleHappened: OptionOrNullable<boolean>;
      ruleSet: RuleSetToggleArgs;
      tokenStandard: OptionOrNullable<TokenStandardArgs>;
      uses: UsesToggleArgs;
    } | {
      __kind: 'V1';
      authorizationData: OptionOrNullable<AuthorizationDataArgs>;
      collection: CollectionToggleArgs;
      collectionDetails: CollectionDetailsToggleArgs;
      data: OptionOrNullable<DataArgs>;
      isMutable: OptionOrNullable<boolean>;
      newUpdateAuthority: OptionOrNullable<Address>;
      primarySaleHappened: OptionOrNullable<boolean>;
      ruleSet: RuleSetToggleArgs;
      uses: UsesToggleArgs;
    };

export function getUpdateArgsEncoder(): Encoder<UpdateArgsArgs> {
  return getDiscriminatedUnionEncoder([
    [
      'V1',
      getStructEncoder([
        ['newUpdateAuthority', getOptionEncoder(getAddressEncoder())],
        ['data', getOptionEncoder(getDataEncoder())],
        ['primarySaleHappened', getOptionEncoder(getBooleanEncoder())],
        ['isMutable', getOptionEncoder(getBooleanEncoder())],
        ['collection', getCollectionToggleEncoder()],
        ['collectionDetails', getCollectionDetailsToggleEncoder()],
        ['uses', getUsesToggleEncoder()],
        ['ruleSet', getRuleSetToggleEncoder()],
        ['authorizationData', getOptionEncoder(getAuthorizationDataEncoder())],
      ]),
    ],
    [
      'AsUpdateAuthorityV2',
      getStructEncoder([
        ['newUpdateAuthority', getOptionEncoder(getAddressEncoder())],
        ['data', getOptionEncoder(getDataEncoder())],
        ['primarySaleHappened', getOptionEncoder(getBooleanEncoder())],
        ['isMutable', getOptionEncoder(getBooleanEncoder())],
        ['collection', getCollectionToggleEncoder()],
        ['collectionDetails', getCollectionDetailsToggleEncoder()],
        ['uses', getUsesToggleEncoder()],
        ['ruleSet', getRuleSetToggleEncoder()],
        ['tokenStandard', getOptionEncoder(getTokenStandardEncoder())],
        ['authorizationData', getOptionEncoder(getAuthorizationDataEncoder())],
      ]),
    ],
    [
      'AsAuthorityItemDelegateV2',
      getStructEncoder([
        ['newUpdateAuthority', getOptionEncoder(getAddressEncoder())],
        ['primarySaleHappened', getOptionEncoder(getBooleanEncoder())],
        ['isMutable', getOptionEncoder(getBooleanEncoder())],
        ['tokenStandard', getOptionEncoder(getTokenStandardEncoder())],
        ['authorizationData', getOptionEncoder(getAuthorizationDataEncoder())],
      ]),
    ],
    [
      'AsCollectionDelegateV2',
      getStructEncoder([
        ['collection', getCollectionToggleEncoder()],
        ['authorizationData', getOptionEncoder(getAuthorizationDataEncoder())],
      ]),
    ],
    [
      'AsDataDelegateV2',
      getStructEncoder([
        ['data', getOptionEncoder(getDataEncoder())],
        ['authorizationData', getOptionEncoder(getAuthorizationDataEncoder())],
      ]),
    ],
    [
      'AsProgrammableConfigDelegateV2',
      getStructEncoder([
        ['ruleSet', getRuleSetToggleEncoder()],
        ['authorizationData', getOptionEncoder(getAuthorizationDataEncoder())],
      ]),
    ],
    [
      'AsDataItemDelegateV2',
      getStructEncoder([
        ['data', getOptionEncoder(getDataEncoder())],
        ['authorizationData', getOptionEncoder(getAuthorizationDataEncoder())],
      ]),
    ],
    [
      'AsCollectionItemDelegateV2',
      getStructEncoder([
        ['collection', getCollectionToggleEncoder()],
        ['authorizationData', getOptionEncoder(getAuthorizationDataEncoder())],
      ]),
    ],
    [
      'AsProgrammableConfigItemDelegateV2',
      getStructEncoder([
        ['ruleSet', getRuleSetToggleEncoder()],
        ['authorizationData', getOptionEncoder(getAuthorizationDataEncoder())],
      ]),
    ],
  ]);
}

export function getUpdateArgsDecoder(): Decoder<UpdateArgs> {
  return getDiscriminatedUnionDecoder([
    [
      'V1',
      getStructDecoder([
        ['newUpdateAuthority', getOptionDecoder(getAddressDecoder())],
        ['data', getOptionDecoder(getDataDecoder())],
        ['primarySaleHappened', getOptionDecoder(getBooleanDecoder())],
        ['isMutable', getOptionDecoder(getBooleanDecoder())],
        ['collection', getCollectionToggleDecoder()],
        ['collectionDetails', getCollectionDetailsToggleDecoder()],
        ['uses', getUsesToggleDecoder()],
        ['ruleSet', getRuleSetToggleDecoder()],
        ['authorizationData', getOptionDecoder(getAuthorizationDataDecoder())],
      ]),
    ],
    [
      'AsUpdateAuthorityV2',
      getStructDecoder([
        ['newUpdateAuthority', getOptionDecoder(getAddressDecoder())],
        ['data', getOptionDecoder(getDataDecoder())],
        ['primarySaleHappened', getOptionDecoder(getBooleanDecoder())],
        ['isMutable', getOptionDecoder(getBooleanDecoder())],
        ['collection', getCollectionToggleDecoder()],
        ['collectionDetails', getCollectionDetailsToggleDecoder()],
        ['uses', getUsesToggleDecoder()],
        ['ruleSet', getRuleSetToggleDecoder()],
        ['tokenStandard', getOptionDecoder(getTokenStandardDecoder())],
        ['authorizationData', getOptionDecoder(getAuthorizationDataDecoder())],
      ]),
    ],
    [
      'AsAuthorityItemDelegateV2',
      getStructDecoder([
        ['newUpdateAuthority', getOptionDecoder(getAddressDecoder())],
        ['primarySaleHappened', getOptionDecoder(getBooleanDecoder())],
        ['isMutable', getOptionDecoder(getBooleanDecoder())],
        ['tokenStandard', getOptionDecoder(getTokenStandardDecoder())],
        ['authorizationData', getOptionDecoder(getAuthorizationDataDecoder())],
      ]),
    ],
    [
      'AsCollectionDelegateV2',
      getStructDecoder([
        ['collection', getCollectionToggleDecoder()],
        ['authorizationData', getOptionDecoder(getAuthorizationDataDecoder())],
      ]),
    ],
    [
      'AsDataDelegateV2',
      getStructDecoder([
        ['data', getOptionDecoder(getDataDecoder())],
        ['authorizationData', getOptionDecoder(getAuthorizationDataDecoder())],
      ]),
    ],
    [
      'AsProgrammableConfigDelegateV2',
      getStructDecoder([
        ['ruleSet', getRuleSetToggleDecoder()],
        ['authorizationData', getOptionDecoder(getAuthorizationDataDecoder())],
      ]),
    ],
    [
      'AsDataItemDelegateV2',
      getStructDecoder([
        ['data', getOptionDecoder(getDataDecoder())],
        ['authorizationData', getOptionDecoder(getAuthorizationDataDecoder())],
      ]),
    ],
    [
      'AsCollectionItemDelegateV2',
      getStructDecoder([
        ['collection', getCollectionToggleDecoder()],
        ['authorizationData', getOptionDecoder(getAuthorizationDataDecoder())],
      ]),
    ],
    [
      'AsProgrammableConfigItemDelegateV2',
      getStructDecoder([
        ['ruleSet', getRuleSetToggleDecoder()],
        ['authorizationData', getOptionDecoder(getAuthorizationDataDecoder())],
      ]),
    ],
  ]);
}

export function getUpdateArgsCodec(): Codec<UpdateArgsArgs, UpdateArgs> {
  return combineCodec(getUpdateArgsEncoder(), getUpdateArgsDecoder());
}

// Data Enum Helpers.
export function updateArgs(
  kind: 'V1',
  data: GetDiscriminatedUnionVariantContent<UpdateArgsArgs, '__kind', 'V1'>
): GetDiscriminatedUnionVariant<UpdateArgsArgs, '__kind', 'V1'>;
export function updateArgs(
  kind: 'AsUpdateAuthorityV2',
  data: GetDiscriminatedUnionVariantContent<
    UpdateArgsArgs,
    '__kind',
    'AsUpdateAuthorityV2'
  >
): GetDiscriminatedUnionVariant<
  UpdateArgsArgs,
  '__kind',
  'AsUpdateAuthorityV2'
>;
export function updateArgs(
  kind: 'AsAuthorityItemDelegateV2',
  data: GetDiscriminatedUnionVariantContent<
    UpdateArgsArgs,
    '__kind',
    'AsAuthorityItemDelegateV2'
  >
): GetDiscriminatedUnionVariant<
  UpdateArgsArgs,
  '__kind',
  'AsAuthorityItemDelegateV2'
>;
export function updateArgs(
  kind: 'AsCollectionDelegateV2',
  data: GetDiscriminatedUnionVariantContent<
    UpdateArgsArgs,
    '__kind',
    'AsCollectionDelegateV2'
  >
): GetDiscriminatedUnionVariant<
  UpdateArgsArgs,
  '__kind',
  'AsCollectionDelegateV2'
>;
export function updateArgs(
  kind: 'AsDataDelegateV2',
  data: GetDiscriminatedUnionVariantContent<
    UpdateArgsArgs,
    '__kind',
    'AsDataDelegateV2'
  >
): GetDiscriminatedUnionVariant<UpdateArgsArgs, '__kind', 'AsDataDelegateV2'>;
export function updateArgs(
  kind: 'AsProgrammableConfigDelegateV2',
  data: GetDiscriminatedUnionVariantContent<
    UpdateArgsArgs,
    '__kind',
    'AsProgrammableConfigDelegateV2'
  >
): GetDiscriminatedUnionVariant<
  UpdateArgsArgs,
  '__kind',
  'AsProgrammableConfigDelegateV2'
>;
export function updateArgs(
  kind: 'AsDataItemDelegateV2',
  data: GetDiscriminatedUnionVariantContent<
    UpdateArgsArgs,
    '__kind',
    'AsDataItemDelegateV2'
  >
): GetDiscriminatedUnionVariant<
  UpdateArgsArgs,
  '__kind',
  'AsDataItemDelegateV2'
>;
export function updateArgs(
  kind: 'AsCollectionItemDelegateV2',
  data: GetDiscriminatedUnionVariantContent<
    UpdateArgsArgs,
    '__kind',
    'AsCollectionItemDelegateV2'
  >
): GetDiscriminatedUnionVariant<
  UpdateArgsArgs,
  '__kind',
  'AsCollectionItemDelegateV2'
>;
export function updateArgs(
  kind: 'AsProgrammableConfigItemDelegateV2',
  data: GetDiscriminatedUnionVariantContent<
    UpdateArgsArgs,
    '__kind',
    'AsProgrammableConfigItemDelegateV2'
  >
): GetDiscriminatedUnionVariant<
  UpdateArgsArgs,
  '__kind',
  'AsProgrammableConfigItemDelegateV2'
>;
export function updateArgs<K extends UpdateArgsArgs['__kind'], Data>(
  kind: K,
  data?: Data
) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isUpdateArgs<K extends UpdateArgs['__kind']>(
  kind: K,
  value: UpdateArgs
): value is UpdateArgs & { __kind: K } {
  return value.__kind === kind;
}
