import { readFileSync } from "node:fs";
import { homedir } from "node:os";
import { resolve } from "node:path";

import { createKeyPairFromBytes, createSignerFromKeyPair, type KeyPairSigner } from "@solana/kit";

import { DEFAULT_CLI_KEYPAIR_PATH } from "./const";
import type { loadKeypairFromEnvironmentBase58, loadKeypairSignerFromEnvironmentBase58 } from "./load-keypair-base58";

/**
 * Load a `CryptoKeyPair` from a filesystem wallet json file
 * (i.e. those generated by the `solana-keygen` command)
 *
 * @param filePath - file path to a json keypair file, default={@link DEFAULT_CLI_KEYPAIR_PATH}
 */
export async function loadKeypairFromFile(filePath: string = DEFAULT_CLI_KEYPAIR_PATH): Promise<CryptoKeyPair> {
  const resolvedPath = resolve(filePath.startsWith("~") ? filePath.replace("~", homedir()) : filePath);
  return await createKeyPairFromBytes(Uint8Array.from(JSON.parse(readFileSync(resolvedPath, "utf8"))));
}

/**
 * Load a `KeyPairSigner` from a filesystem wallet json file
 * (i.e. those generated by the `solana-keygen` command)
 *
 * @param filePath - file path to a json keypair file, default={@link DEFAULT_CLI_KEYPAIR_PATH}
 */
export async function loadKeypairSignerFromFile(filePath: string = DEFAULT_CLI_KEYPAIR_PATH): Promise<KeyPairSigner> {
  return await createSignerFromKeyPair(await loadKeypairFromFile(filePath));
}

/**
 * Load a `CryptoKeyPair` from an environment variable
 * (i.e. those generated by the `solana-keygen` command)
 *
 * Note: for base58 encoded keypairs in environment variables use {@link loadKeypairFromEnvironmentBase58}
 *
 * @param variableName - environment variable name accessible via `process.env[variableName]`
 */
export async function loadKeypairFromEnvironment<TName extends string | keyof NodeJS.ProcessEnv>(
  variableName: TName,
): Promise<CryptoKeyPair> {
  if (!process.env[variableName]) {
    throw new Error(`Environment variable '${variableName}' not set`);
  }
  return await createKeyPairFromBytes(Uint8Array.from(JSON.parse(process.env[variableName])));
}

/**
 * Load a `KeyPairSigner` from a environment variable
 * (i.e. those generated by the `solana-keygen` command)
 *
 * Note: for base58 encoded keypairs in environment variables use {@link loadKeypairSignerFromEnvironmentBase58}
 *
 * @param variableName - environment variable name accessible via `process.env[variableName]`
 */
export async function loadKeypairSignerFromEnvironment<TName extends string | keyof NodeJS.ProcessEnv>(
  variableName: TName,
): Promise<KeyPairSigner> {
  return await createSignerFromKeyPair(await loadKeypairFromEnvironment(variableName));
}
